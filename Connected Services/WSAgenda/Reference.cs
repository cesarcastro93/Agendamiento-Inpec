//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InpecTurnos.WSAgenda {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSAgenda.WSAgendaSoap")]
    public interface WSAgendaSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerOficinas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerOficinas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerOficinas", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerOficinasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerServicios", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerServicios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerServicios", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerServiciosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerHorariosAgenda", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerHorariosAgenda(string Sede, string fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerHorariosAgenda", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerHorariosAgendaAsync(string Sede, string fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertaAgenda", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InsertaAgenda(string Sede, string TipoServicio, string fecha, string Horario, string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertaAgenda", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> InsertaAgendaAsync(string Sede, string TipoServicio, string fecha, string Horario, string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidaCedula", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ValidaCedula(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidaCedula", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidaCedulaAsync(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDatosTurnos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerDatosTurnos(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDatosTurnos", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDatosTurnosAsync(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BorraAgenda", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int BorraAgenda(string cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BorraAgenda", ReplyAction="*")]
        System.Threading.Tasks.Task<int> BorraAgendaAsync(string cedula);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WSAgendaSoapChannel : InpecTurnos.WSAgenda.WSAgendaSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSAgendaSoapClient : System.ServiceModel.ClientBase<InpecTurnos.WSAgenda.WSAgendaSoap>, InpecTurnos.WSAgenda.WSAgendaSoap {
        
        public WSAgendaSoapClient() {
        }
        
        public WSAgendaSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSAgendaSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSAgendaSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSAgendaSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet ObtenerOficinas() {
            return base.Channel.ObtenerOficinas();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerOficinasAsync() {
            return base.Channel.ObtenerOficinasAsync();
        }
        
        public System.Data.DataSet ObtenerServicios() {
            return base.Channel.ObtenerServicios();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerServiciosAsync() {
            return base.Channel.ObtenerServiciosAsync();
        }
        
        public System.Data.DataSet ObtenerHorariosAgenda(string Sede, string fecha) {
            return base.Channel.ObtenerHorariosAgenda(Sede, fecha);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerHorariosAgendaAsync(string Sede, string fecha) {
            return base.Channel.ObtenerHorariosAgendaAsync(Sede, fecha);
        }
        
        public bool InsertaAgenda(string Sede, string TipoServicio, string fecha, string Horario, string cedula) {
            return base.Channel.InsertaAgenda(Sede, TipoServicio, fecha, Horario, cedula);
        }
        
        public System.Threading.Tasks.Task<bool> InsertaAgendaAsync(string Sede, string TipoServicio, string fecha, string Horario, string cedula) {
            return base.Channel.InsertaAgendaAsync(Sede, TipoServicio, fecha, Horario, cedula);
        }
        
        public bool ValidaCedula(string cedula) {
            return base.Channel.ValidaCedula(cedula);
        }
        
        public System.Threading.Tasks.Task<bool> ValidaCedulaAsync(string cedula) {
            return base.Channel.ValidaCedulaAsync(cedula);
        }
        
        public System.Data.DataSet ObtenerDatosTurnos(string cedula) {
            return base.Channel.ObtenerDatosTurnos(cedula);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDatosTurnosAsync(string cedula) {
            return base.Channel.ObtenerDatosTurnosAsync(cedula);
        }
        
        public int BorraAgenda(string cedula) {
            return base.Channel.BorraAgenda(cedula);
        }
        
        public System.Threading.Tasks.Task<int> BorraAgendaAsync(string cedula) {
            return base.Channel.BorraAgendaAsync(cedula);
        }
    }
}
